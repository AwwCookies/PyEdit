<?xml version="1.0"?>
<!--
        This syntax-file was generated by sourceview2codebuffer.xsl from
        GtkSourceView's Octave-syntax-file!
        
        This transformation is not perfect so it may need some hand-word to fix
        minor issues in this file.
        
        You can get sourceview2codebuffer.xsl from http://pygtkcodebuffer.googlecode.com/. 
    -->
<syntax>
	
	

	<pattern style="comment">#|%.*$</pattern>

	<string style="string" escape="\"><starts>[uUrR]?"""</starts><ends>"""</ends></string>

	<string style="string" escape="\"><starts>[uUrR]?'''</starts><ends>'''</ends></string>

	<string style="string" escape="\"><starts>[uUrR]?"</starts><ends>"</ends></string>

	<string style="string" escape="\"><starts>[uUrR]?'</starts><ends>'</ends></string>

	<keywordlist style="preprocessor" flags="">
        	<keyword>false</keyword>
	        <keyword>true</keyword>
        	<keyword>Inf</keyword>
	        <keyword>inf</keyword>
	        <keyword>NaN</keyword>
        	<keyword>NA</keyword>
	</keywordlist>

	<keywordlist style="keyword" flags="">		
		<keyword>function</keyword>
		<keyword>endfunction</keyword>

		<keyword>switch</keyword>
		<keyword>case</keyword>
		<keyword>endswitch</keyword>
		<keyword>otherwise</keyword>

		<keyword>unwind_protect</keyword>
		<keyword>unwind_protect_cleanup</keyword>
		<keyword>end_unwind_protect</keyword>

		<keyword>try</keyword>
		<keyword>catch</keyword>
		<keyword>end_try_catch</keyword>
		<keyword>end</keyword>

		<keyword>if</keyword>
      		<keyword>else</keyword>
		<keyword>elseif</keyword>
		<keyword>endif</keyword>

		<keyword>break</keyword>
		<keyword>continue</keyword>

		<keyword>for</keyword>
		<keyword>endfor</keyword>
		<keyword>return</keyword>

		<keyword>do</keyword>
		<keyword>until</keyword>

		<keyword>while</keyword>
		<keyword>endwhile</keyword>

		<keyword>global</keyword>
		<keyword>nargin</keyword>
		<keyword>nargout</keyword>
		<keyword>assert</keyword>
	</keywordlist>

	<pattern style="number">\b([1-9][0-9]*|0)([Uu]([Ll]|LL|ll)?|([Ll]|LL|ll)[Uu]?)?\b</pattern>

	<pattern style="number">\b([0-9]+[Ee][-]?[0-9]+|([0-9]*\.[0-9]+|[0-9]+\.)([Ee][-]?[0-9]+)?)[fFlL]?</pattern>

	<pattern style="number">\b0[0-7]+([Uu]([Ll]|LL|ll)?|([Ll]|LL|ll)[Uu]?)?\b</pattern>

	<pattern style="number">\b0[xX][0-9a-fA-F]+([Uu]([Ll]|LL|ll)?|([Ll]|LL|ll)[Uu]?)?\b</pattern>

	<keywordlist style="function" flags="">
		<keyword>size</keyword>
		<keyword>zeros</keyword>
		<keyword>ones</keyword>
		<keyword>min</keyword>
		<keyword>max</keyword>
		<keyword>varargs</keyword>
		<keyword>sqrt</keyword>
		<keyword>atan2</keyword>
		<keyword>asin</keyword>
		<keyword>acos</keyword>
		<keyword>log10</keyword>
		<keyword>log</keyword>
		<keyword>real</keyword>
		<keyword>error</keyword>
		<keyword>isscalar</keyword>
		<keyword>isstr</keyword>
		<keyword>strcmp</keyword>
		<keyword>log2</keyword>
		<keyword>Inf</keyword>
		<keyword>isvector</keyword>
		<keyword>strcat</keyword>
		<keyword>fsolve</keyword>
		<keyword>islogical</keyword>
		<keyword>isempty</keyword>
		<keyword>isnumeric</keyword>
		<keyword>prod</keyword>
		<keyword>round</keyword>
		<keyword>dims</keyword>
		<keyword>cumprod</keyword>
		<keyword>ismatrix</keyword>
		<keyword>floor</keyword>
		<keyword>sort</keyword>
		<keyword>ceil</keyword>
		<keyword>linspace</keyword>
		<keyword>isnan</keyword>
		<keyword>isinf</keyword>
		<keyword>nan_inf</keyword>
		<keyword>repmat</keyword>
		<keyword>colums</keyword>
		<keyword>rows</keyword>
		<keyword>sum</keyword>
		<keyword>rem</keyword>
		<keyword>reshape</keyword>
		<keyword>conv</keyword>
		<keyword>length</keyword>
		<keyword>usage</keyword>
		<keyword>log2</keyword>
		<keyword>abs</keyword>
		<keyword>setstr</keyword>
		<keyword>printf</keyword>
		<keyword>sprintf</keyword>
		<keyword>fprintf</keyword>
		<keyword>fread</keyword>
		<keyword>fopen</keyword>
		<keyword>fclose</keyword>
		<keyword>system</keyword>
		<keyword>unlink</keyword>
		<keyword>error</keyword>
		<keyword>warning</keyword>
	</keywordlist>
</syntax>
