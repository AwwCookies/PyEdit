<?xml version="1.0"?>
<!--
        This syntax-file was generated by sourceview2codebuffer.xsl from
        GtkSourceView's Python-syntax-file!
        
        This transformation is not perfect so it may need some hand-word to fix
        minor issues in this file.
        
        You can get sourceview2codebuffer.xsl from http://pygtkcodebuffer.googlecode.com/. 
    -->
<syntax>

	

	<string style="string" escape="\"><starts>([uUrR]|[uU][rR]|[rR][uU])?"""</starts><ends>"""</ends></string>

	<string style="string" escape="\"><starts>([uUrR]|[uU][rR]|[rR][uU])?'''</starts><ends>'''</ends></string>

	<string style="string" escape="\"><starts>([uUrR]|[uU][rR]|[rR][uU])?"</starts><ends>"</ends></string>

	<string style="string" escape="\"><starts>([uUrR]|[uU][rR]|[rR][uU])?'</starts><ends>'</ends></string>

	<pattern style="comment">#.*$</pattern>

	<keywordlist style="preprocessor">
		<keyword>import</keyword>
		<keyword>from</keyword>
		<keyword>as</keyword>
		<keyword>False</keyword>
		<keyword>None</keyword>
		<keyword>True</keyword>
		<keyword>__name__</keyword>
		<keyword>__debug__</keyword>
	</keywordlist>

	<keywordlist style="keyword">
		<keyword>def</keyword>
		<keyword>class</keyword>
		<keyword>return</keyword>
	</keywordlist>

	<keywordlist style="keyword">
		<keyword>and</keyword>
		<keyword>assert</keyword>
		<keyword>break</keyword>
		<keyword>continue</keyword>
		<keyword>del</keyword>
		<keyword>elif</keyword>
		<keyword>else</keyword>
		<keyword>except</keyword>
		<keyword>exec</keyword>
		<keyword>finally</keyword>
		<keyword>for</keyword>
		<keyword>global</keyword>
		<keyword>if</keyword>
		<keyword>in</keyword>
		<keyword>is</keyword>
		<keyword>lambda</keyword>
		<keyword>not</keyword>
		<keyword>or</keyword>
		<keyword>pass</keyword>
		<keyword>print</keyword>
		<keyword>raise</keyword>
		<keyword>try</keyword>
		<keyword>while</keyword>
		<keyword>yield</keyword>
	</keywordlist>

	<keywordlist style="special">
		<keyword>ArithmeticError</keyword>
		<keyword>AssertionError</keyword>
		<keyword>AttributeError</keyword>
		<keyword>EnvironmentError</keyword>
		<keyword>EOFError</keyword>
		<keyword>Exception</keyword>
		<keyword>FloatingPointError</keyword>
		<keyword>ImportError</keyword>
		<keyword>IndentationError</keyword>
		<keyword>IndexError</keyword>
		<keyword>IOError</keyword>
		<keyword>KeyboardInterrupt</keyword>
		<keyword>KeyError</keyword>
		<keyword>LookupError</keyword>
		<keyword>MemoryError</keyword>
		<keyword>NameError</keyword>
		<keyword>NotImplementedError</keyword>
		<keyword>OSError</keyword>
		<keyword>OverflowError</keyword>
		<keyword>ReferenceError</keyword>
		<keyword>RuntimeError</keyword>
		<keyword>StandardError</keyword>
		<keyword>StopIteration</keyword>
		<keyword>SyntaxError</keyword>
		<keyword>SystemError</keyword>
		<keyword>SystemExit</keyword>
		<keyword>TabError</keyword>
		<keyword>TypeError</keyword>
		<keyword>UnboundLocalError</keyword>
		<keyword>UnicodeDecodeError</keyword>
		<keyword>UnicodeEncodeError</keyword>
		<keyword>UnicodeError</keyword>
		<keyword>UnicodeTranslateError</keyword>
		<keyword>ValueError</keyword>
		<keyword>WindowsError</keyword>
		<keyword>ZeroDivisionError</keyword>
		
		<keyword>Warning</keyword>
		<keyword>UserWarning</keyword>
		<keyword>DeprecationWarning</keyword>
		<keyword>PendingDeprecationWarning</keyword>
		<keyword>SyntaxWarning</keyword>
		<keyword>OverflowWarning</keyword>
		<keyword>RuntimeWarning</keyword>
		<keyword>FutureWarning</keyword>		

		<keyword>__import__</keyword>
		<keyword>abs</keyword>
		<keyword>apply</keyword>
		<keyword>basestring</keyword>
		<keyword>bool</keyword>
		<keyword>buffer</keyword>
		<keyword>callable</keyword>
		<keyword>chr</keyword>
		<keyword>classmethod</keyword>
		<keyword>cmp</keyword>
		<keyword>coerce</keyword>
		<keyword>compile</keyword>
		<keyword>complex</keyword>
		<keyword>delattr</keyword>
		<keyword>dict</keyword>
		<keyword>dir</keyword>
		<keyword>divmod</keyword>
		<keyword>enumerate</keyword>
		<keyword>eval</keyword>
		<keyword>execfile</keyword>
		<keyword>file</keyword>
		<keyword>filter</keyword>
		<keyword>float</keyword>
		<keyword>getattr</keyword>
		<keyword>globals</keyword>
		<keyword>hasattr</keyword>
		<keyword>hash</keyword>
		<keyword>hex</keyword>
		<keyword>id</keyword>
		<keyword>input</keyword>
		<keyword>int</keyword>
		<keyword>intern</keyword>
		<keyword>isinstance</keyword>
		<keyword>issubclass</keyword>
		<keyword>iter</keyword>
		<keyword>len</keyword>
		<keyword>list</keyword>
		<keyword>locals</keyword>
		<keyword>long</keyword>
		<keyword>map</keyword>
		<keyword>max</keyword>
		<keyword>min</keyword>
		<keyword>object</keyword>
		<keyword>oct</keyword>
		<keyword>open</keyword>
		<keyword>ord</keyword>
		<keyword>pow</keyword>
		<keyword>property</keyword>
		<keyword>range</keyword>
		<keyword>raw_input</keyword>
		<keyword>reduce</keyword>
		<keyword>reload</keyword>
		<keyword>repr</keyword>
		<keyword>round</keyword>
		<keyword>setattr</keyword>
		<keyword>slice</keyword>
		<keyword>staticmethod</keyword>
		<keyword>str</keyword>
		<keyword>sum</keyword>
		<keyword>super</keyword>
		<keyword>tuple</keyword>
		<keyword>type</keyword>
		<keyword>unichr</keyword>
		<keyword>unicode</keyword>
		<keyword>vars</keyword>
		<keyword>xrange</keyword>
		<keyword>zip</keyword>
	</keywordlist>

	<pattern style="datatype">\bself\b</pattern>
	
	<pattern style="number">\b([1-9][0-9]*|0)([Uu]([Ll]|LL|ll)?|([Ll]|LL|ll)[Uu]?)?\b</pattern>

	<pattern style="number">\b([0-9]+[Ee][-]?[0-9]+|([0-9]*\.[0-9]+|[0-9]+\.)([Ee][-]?[0-9]+)?)[fFlL]?</pattern>

	<pattern style="number">\b0[0-7]+([Uu]([Ll]|LL|ll)?|([Ll]|LL|ll)[Uu]?)?\b</pattern>

	<pattern style="number">\b0[xX][0-9a-fA-F]+([Uu]([Ll]|LL|ll)?|([Ll]|LL|ll)[Uu]?)?\b</pattern>

</syntax>
