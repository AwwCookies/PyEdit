<?xml version="1.0"?>
<!--
        This syntax-file was generated by sourceview2codebuffer.xsl from
        GtkSourceView's C++-syntax-file!
        
        This transformation is not perfect so it may need some hand-word to fix
        minor issues in this file.
        
        You can get sourceview2codebuffer.xsl from http://pygtkcodebuffer.googlecode.com/. 
    -->
<syntax>
	
	

	<pattern style="comment">//.*$</pattern>

	<string style="comment"><starts>/\*</starts><ends>\*/</ends></string>

	<string style="comment"><starts>^[ \t]*#[ \t]*if[ \t]*0</starts><ends>[ \t]*#[ \t]*(endif|else)</ends></string>

	<string style="string" escape="\"><starts>"</starts><ends>"</ends></string>

	<string style="preprocessor"><starts>^#[ \t]*(include|pragma)</starts><ends>\n</ends></string>

	<keywordlist style="keyword" flags="">
		<keyword>and</keyword>
		<keyword>and_eq</keyword>
		<keyword>asm</keyword>
		<keyword>bitand</keyword>
		<keyword>bitor</keyword>
		<keyword>break</keyword>
		<keyword>case</keyword>
		<keyword>catch</keyword>
		<keyword>compl</keyword>
		<keyword>const_cast</keyword>
		<keyword>continue</keyword>
		<keyword>default</keyword>
		<keyword>delete</keyword>
		<keyword>do</keyword>
		<keyword>dynamic_cast</keyword>
      		<keyword>else</keyword>
		<keyword>for</keyword>
		<keyword>fortran</keyword>
		<keyword>friend</keyword>
		<keyword>goto</keyword>
		<keyword>if</keyword>
		<keyword>new</keyword>
		<keyword>not</keyword>
		<keyword>not_eq</keyword>
		<keyword>operator</keyword>
		<keyword>or</keyword>
		<keyword>or_eq</keyword>
		<keyword>private</keyword>
		<keyword>protected</keyword>
		<keyword>public</keyword>
		<keyword>reinterpret_cast</keyword>
		<keyword>return</keyword>
		<keyword>sizeof</keyword>
		<keyword>static_cast</keyword>
		<keyword>switch</keyword>
		<keyword>this</keyword>
		<keyword>throw</keyword>
		<keyword>try</keyword>
		<keyword>typeid</keyword>
		<keyword>using</keyword>
		<keyword>while</keyword>
		<keyword>xor</keyword>
		<keyword>xor_eq</keyword>
	</keywordlist>

	<keywordlist style="datatype" flags="">
		<keyword>auto</keyword>
		<keyword>bool</keyword>
		<keyword>char</keyword>
		<keyword>class</keyword>
		<keyword>const</keyword>
		<keyword>double</keyword>
      		<keyword>enum</keyword>
		<keyword>explicit</keyword>
		<keyword>export</keyword>
		<keyword>extern</keyword>
		<keyword>float</keyword>
		<keyword>inline</keyword>
		<keyword>int</keyword>
		<keyword>long</keyword>
		<keyword>mutable</keyword>
		<keyword>namespace</keyword>
		<keyword>register</keyword>
		<keyword>short</keyword>
		<keyword>signed</keyword>
		<keyword>static</keyword>
		<keyword>struct</keyword>
		<keyword>template</keyword>
		<keyword>typedef</keyword>
		<keyword>typename</keyword>
		<keyword>union</keyword>
		<keyword>unsigned</keyword>
		<keyword>virtual</keyword>
		<keyword>void</keyword>
		<keyword>volatile</keyword>
		<keyword>wchar_t</keyword>
	</keywordlist>

	<string style="string" escape="\"><starts>'</starts><ends>'</ends></string>

	<pattern style="number">\b([1-9][0-9]*|0)([Uu]([Ll]|LL|ll)?|([Ll]|LL|ll)[Uu]?)?\b</pattern>

	<pattern style="number">\b([0-9]+[Ee][-]?[0-9]+|([0-9]*\.[0-9]+|[0-9]+\.)([Ee][-]?[0-9]+)?)[fFlL]?</pattern>

	<pattern style="number">\b0[0-7]+([Uu]([Ll]|LL|ll)?|([Ll]|LL|ll)[Uu]?)?\b</pattern>

	<pattern style="number">\b0[xX][0-9a-fA-F]+([Uu]([Ll]|LL|ll)?|([Ll]|LL|ll)[Uu]?)?\b</pattern>

	<keywordlist style="preprocessor" flags="">
		<keyword>NULL</keyword>
		<keyword>TRUE</keyword>
		<keyword>FALSE</keyword>
		<keyword>MAX</keyword>
		<keyword>MIN</keyword>
		<keyword>__LINE__</keyword>
		<keyword>__DATA__</keyword>
		<keyword>__FILE__</keyword>
		<keyword>__TIME__</keyword>
		<keyword>__STDC__</keyword>
		<keyword>false</keyword>
		<keyword>true</keyword>
	</keywordlist>

	<keywordlist style="preprocessor" flags="">
		<keyword>if</keyword>
		<keyword>ifdef</keyword>
		<keyword>ifndef</keyword>
		<keyword>else</keyword>
		<keyword>elif</keyword>
		<keyword>define</keyword>
		<keyword>endif</keyword>
		<keyword>undef</keyword>
		<keyword>error</keyword>
		<keyword>pragma</keyword>
		<keyword>line</keyword>
	</keywordlist>

</syntax>
