<?xml version="1.0"?>
<!--
        This syntax-file was generated by sourceview2codebuffer.xsl from
        GtkSourceView's Nemerle-syntax-file!
        
        This transformation is not perfect so it may need some hand-word to fix
        minor issues in this file.
        
        You can get sourceview2codebuffer.xsl from http://pygtkcodebuffer.googlecode.com/. 
    -->
<syntax>
	
	

	<pattern style="string">'(\\)?.'</pattern>
	
	<string style="string" escape="\"><starts>"</starts><ends>"</ends></string>

	<pattern style="comment">//.*$</pattern>

	<string style="comment"><starts>/\*</starts><ends>\*/</ends></string>
	
	<keywordlist style="keyword" flags="">
		<keyword>_</keyword>
		<keyword>abstract</keyword>
		<keyword>and</keyword>
		<keyword>array</keyword>
		<keyword>as</keyword>
		<keyword>base</keyword>
		<keyword>catch</keyword>
		<keyword>class</keyword>
		<keyword>def</keyword>
		<keyword>extends</keyword>
		<keyword>extern</keyword>
		<keyword>false</keyword>
		<keyword>finally</keyword>
		<keyword>fun</keyword>
		<keyword>implements</keyword>
		<keyword>interface</keyword>
		<keyword>internal</keyword>
		<keyword>macro</keyword>
		<keyword>match</keyword>
		<keyword>module</keyword>
		<keyword>mutable</keyword>
		<keyword>namespace</keyword>
		<keyword>new</keyword>
		<keyword>null</keyword>
		<keyword>out</keyword>
		<keyword>override</keyword>
		<keyword>params</keyword>
		<keyword>private</keyword>
		<keyword>protected</keyword>
		<keyword>public</keyword>
		<keyword>ref</keyword>
		<keyword>sealed</keyword>
		<keyword>static</keyword>
		<keyword>struct</keyword>
		<keyword>syntax</keyword>
		<keyword>this</keyword>
		<keyword>throw</keyword>
		<keyword>true</keyword>
		<keyword>try</keyword>
		<keyword>type</keyword>
		<keyword>typeof</keyword>
		<keyword>using</keyword>
		<keyword>variant</keyword>
		<keyword>virtual</keyword>
		<keyword>when</keyword>
		<keyword>where</keyword>
	</keywordlist>
	
	<keywordlist style="keyword" flags="">
		<keyword>do</keyword> 
		<keyword>while</keyword>
		<keyword>for</keyword> 
		<keyword>foreach</keyword>
		<keyword>in</keyword>
		<keyword>if</keyword>
		<keyword>else</keyword>
		<keyword>lock</keyword>
		<keyword>repeat</keyword>
		<keyword>until</keyword>
		<keyword>unless</keyword>
		<keyword>using</keyword>
		<keyword>when</keyword>
		<keyword>while</keyword>
	</keywordlist>

	<pattern style="number">[0-9]*\.[0-9]+([eE][-+]?[0-9]+)?\b</pattern>
	
	<pattern style="number">\b[0-9]+[Uu]?([Ll]|[Ss]|[Bb])?\b</pattern>

	<pattern style="number">\b0[bB][01]+[Uu]?([Ll]|[Ss]|[Bb])?\b</pattern>

	<pattern style="number">\b0[oO][0-7]+[Uu]?([Ll]|[Ss]|[Bb])?\b</pattern>

	<pattern style="number">\b0[xX][0-9a-fA-F]+[Uu]?([Ll]|[Ss]|[Bb])?\b</pattern>

	<keywordlist style="datatype" flags="">
		<keyword>bool</keyword>
		<keyword>byte</keyword>
		<keyword>char</keyword>
		<keyword>decimal</keyword>
		<keyword>double</keyword>
		<keyword>float</keyword>
		<keyword>int</keyword>
		<keyword>long</keyword>
		<keyword>object</keyword>
		<keyword>sbyte</keyword>
		<keyword>short</keyword>
		<keyword>string</keyword>
		<keyword>uint</keyword>
		<keyword>ulong</keyword>
		<keyword>ushort</keyword>
		<keyword>void</keyword>		
	</keywordlist>
	
	<keywordlist style="datatype" flags="">
		<keyword>list</keyword>
	</keywordlist>

</syntax>
