<?xml version="1.0"?>
<!--
        This syntax-file was generated by sourceview2codebuffer.xsl from
        GtkSourceView's Pascal-syntax-file!
        
        This transformation is not perfect so it may need some hand-word to fix
        minor issues in this file.
        
        You can get sourceview2codebuffer.xsl from http://pygtkcodebuffer.googlecode.com/. 
    -->
<syntax>

	<string style="string"><starts>[uUrR]?'</starts><ends>'</ends></string>

	<pattern style="number">\b(([0-9]+)|([0-9]+\.[0-9]+([Ee][-]?[0-9]+)?))\b</pattern>

	
	<pattern style="number">\b\$[0-9a-fA-F]*\b</pattern>

	<pattern style="comment">//.*$</pattern>

	<string style="comment"><starts>\(\*</starts><ends>\*\)</ends></string>

	<string style="comment"><starts>\{[^\$]</starts><ends>\}</ends></string>

	<string style="preprocessor"><starts>\{\$</starts><ends>\}</ends></string>

	<keywordlist style="keyword" flags="I">
		
		<keyword>Program</keyword>
		<keyword>Library</keyword>
		<keyword>Unit</keyword>
		
		
		<keyword>Uses</keyword>
		<keyword>Interface</keyword>
		<keyword>Implementation</keyword>
		
		
		<keyword>Initialization</keyword>
		<keyword>Finalization</keyword>
		
		
		<keyword>Begin</keyword>
		<keyword>End</keyword>
		
		
		<keyword>Var</keyword>
		<keyword>Const</keyword>
	</keywordlist>

	<keywordlist style="keyword" flags="I">
		
		<keyword>Function</keyword>
		<keyword>Procedure</keyword>
		
		
		<keyword>Overload</keyword>

		<keyword>cdecl</keyword>		
	</keywordlist>

	<keywordlist style="keyword" flags="I">
		<keyword>if</keyword>
		<keyword>then</keyword>
		<keyword>else</keyword>

		<keyword>is</keyword>

		<keyword>and</keyword>
		<keyword>not</keyword>
		<keyword>or</keyword>
		<keyword>xor</keyword>

		<keyword>shr</keyword>
		<keyword>shl</keyword>
	</keywordlist>

	<keywordlist style="keyword" flags="I">
		<keyword>div</keyword>
		<keyword>mod</keyword>
	</keywordlist>

	<keywordlist style="keyword" flags="I">
		<keyword>while</keyword>
		<keyword>do</keyword>

		<keyword>for</keyword>
		<keyword>to</keyword>

		<keyword>case</keyword>
		<keyword>of</keyword>

		<keyword>repeat</keyword>
		<keyword>until</keyword>

		<keyword>break</keyword>
		<keyword>continue</keyword>
		
		<keyword>try</keyword>
		<keyword>except</keyword>
		<keyword>finally</keyword>
		<keyword>raise</keyword>
	</keywordlist>

	<keywordlist style="keyword" flags="I">
		<keyword>Type</keyword>

		
		<keyword>Packed</keyword>

		<keyword>Array</keyword>
		<keyword>Record</keyword>

		
		<keyword>Object</keyword>
		<keyword>Class</keyword>
		<keyword>Interface</keyword>

		
		<keyword>Public</keyword>
		<keyword>Private</keyword>
		<keyword>Protected</keyword>

		
		<keyword>Constructor</keyword>
		<keyword>Destructor</keyword>

		
		<keyword>Virtual</keyword>
		<keyword>Abstract</keyword>
		<keyword>Override</keyword>

		
		<keyword>Property</keyword>
		<keyword>Read</keyword>
		<keyword>Write</keyword>
		<keyword>default</keyword>
				
		
		<keyword>With</keyword>
		<keyword>As</keyword>
		
		
		<keyword>self</keyword>

		
		<keyword>Inherited</keyword>
	</keywordlist>

	<keywordlist style="datatype" flags="I">
		<keyword>Char</keyword>
		<keyword>String</keyword>
		<keyword>Integer</keyword>
		<keyword>Real</keyword>
		<keyword>Boolean</keyword>
		<keyword>Pointer</keyword>
	</keywordlist>

	<keywordlist style="keyword" flags="I">
		
		<keyword>chr</keyword>
		<keyword>ord</keyword>
		<keyword>succ</keyword>
		<keyword>pred</keyword>

		
		<keyword>abs</keyword>

		
		<keyword>round</keyword>
		<keyword>trunc</keyword>

		
		<keyword>sqr</keyword>
		<keyword>sqrt</keyword>

		
		<keyword>arctan</keyword>
		<keyword>cos</keyword>
		<keyword>sin</keyword>

		
		<keyword>exp</keyword>
		<keyword>ln</keyword>

		
		<keyword>odd</keyword>
		<keyword>eof</keyword>
		<keyword>eoln</keyword>
	</keywordlist>

	<keywordlist style="keyword" flags="I">
		<keyword>nil</keyword>
		<keyword>False</keyword>
		<keyword>True</keyword>
	</keywordlist>
</syntax>
